params {
    gadi_account = System.getenv("PROJECT")
    storage_account = ''
    singularityCacheDir = ''
}

singularity {
    enabled = true
    autoMounts = true
    autoCleanUp = true
    cacheDir = params.singularityCacheDir ? params.singularityCacheDir
        : "/scratch/${params.gadi_account}/${params.whoami}/.nextflow/singularity"
    libraryDir = params.singularityCacheDir ? params.singularityCacheDir
        : "/scratch/${params.gadi_account}/${params.whoami}/.nextflow/singularity"
    temp = "/scratch/${params.gadi_account}/${params.whoami}/.nextflow/singularity/temp"
}

process {
    module = 'singularity'
    cache = 'lenient'
    executor = 'pbspro'
    scratch = true
    queue = { task.memory > 190.Gb ? "hugemem" : "normal" }
    project = "${params.gadi_account}"
    // Enable provision of multiple storage paths for -lstorage directive
    ext.storageAccountString = {
        accountString -> accountString.tokenize(',')
            .collect {
                acct ->"scratch/${acct}+gdata/${acct}"
            }.join('+')
    }

    if (params.storage_account) {
    storage = "scratch/${params.gadi_account}+gdata/${params.gadi_account}+${ext.storageAccountString(params.storage_account)}"
    }
    else {
    storage = "scratch/${params.gadi_account}+gdata/${params.gadi_account}"
    }
    walltime = String.format("%02d:%02d:00", task.time.toHours(), task.time.toMinutes() % 60)

    clusterOptions = { "-l jobfs=${task.disk.toGiga()}GB -l ncpus=${task.cpus} -l mem=${task.memory.toGiga()}GB -l storage=${task.storage} -l walltime=${task.walltime}" }
}